package application;

import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Node;
import javafx.scene.Scene;
import javafx.scene.control.Alert;
import javafx.scene.control.Alert.AlertType;
import javafx.scene.control.Button;

import javafx.scene.control.TextField;
import javafx.scene.image.Image;
import javafx.scene.layout.Pane;
import javafx.stage.Stage;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintStream;

import javafx.event.ActionEvent;

import javafx.scene.control.PasswordField;

import javafx.scene.control.CheckBox;

public class LoginRegistrazioneController {
	@FXML
	private TextField txtUsernameLogin;
	@FXML
	private PasswordField txtPasswordLogin;
	@FXML
	private Button btnlogin;
	@FXML
	private CheckBox cbSalvaCredenziali;
	@FXML
	private TextField txtUsernameReg;
	@FXML
	private PasswordField txtPasswordReg;
	@FXML
	private Button btnRegistrazione;
	
	Avvisi av = new Avvisi();
	ModelLoginRegistrazione model=new ModelLoginRegistrazione();
	Utente utente;
	
	String path = "user.txt";
	
	File file = new File(path);
	
	public void setParametri() {
		if(file.exists())
		{
			FileReader f;
			try {
				f=new FileReader(path);
				BufferedReader b;
				b=new BufferedReader(f);
				
				txtUsernameLogin.setText(b.readLine());
				txtPasswordLogin.setText(b.readLine());
				cbSalvaCredenziali.setSelected(true);
				
				b.close();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
				System.out.println(e);
			}
		}
		
	}

	// Event Listener on Button[#btnlogin].onAction
	@FXML
	public void Login(ActionEvent event) {
		// TODO Autogenerated
		if(txtUsernameLogin.getText().equals("") || txtPasswordLogin.getText().equals(""))
		{			
			av.creaFinestraErrore("campi","non puoi lasciare vuoti i campi");
			
		}else{
			if(model.utentePresente(txtUsernameLogin.getText(),txtPasswordLogin.getText()))
			{
				
				utente = new Utente(txtUsernameLogin.getText(),txtPasswordLogin.getText());
				
				utente.setId(model.idUtente(utente));
				
				if(cbSalvaCredenziali.isSelected())
				{
					//salvare  nel file
					try {
						file.createNewFile();
						FileOutputStream prova = new FileOutputStream(path);
						
						PrintStream scrivi = new PrintStream(prova);
						
						scrivi.println(utente.getUsername());
						scrivi.println(utente.getPassword());
						
						scrivi.close();
					} catch (IOException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
						System.out.println(e);
					}
					
					
				}else{
					file.delete();
				}
				
				((Node)event.getSource()).getScene().getWindow().hide();
				Stage primaryStage = new Stage();
				FXMLLoader loader = new FXMLLoader();
				Pane root;
				try {
					root = loader.load(getClass().getResource("/application/Principale.fxml").openStream());
					PrincipaleController cnt = (PrincipaleController) loader.getController();
					cnt.setParametri(utente);
					Scene scene = new Scene(root);
					scene.getStylesheets().add(getClass().getResource("application.css").toExternalForm());
					primaryStage.setTitle("Rubrica");
					primaryStage.setResizable(false);
					primaryStage.getIcons().add(new Image("/imm/rubrica.jpg"));
					primaryStage.setScene(scene);
					primaryStage.show();
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
					System.out.println(e);
				}
				
			}else{
				av.creaFinestraErrore("campi","Hai inserito male le username e password reinsirisci");
			}
		}
	}
	// Event Listener on Button[#btnRegistrazione].onAction
	@FXML
	public void Registrazione(ActionEvent event) {
		// TODO Autogenerated
		
		if(txtUsernameReg.getText().equals("") || txtPasswordReg.getText().equals(""))
		{
			av.creaFinestraErrore("campi","non puoi lasciare vuoti i campi della registrazione");
		}else{
			
			
			if(txtUsernameReg.getText().length()>=4)
			{
				if(txtUsernameReg.getText().length()<=10)
				{
					if(txtPasswordReg.getText().length()>=4)
					{
						if(txtPasswordReg.getText().length()<=10)
						{
							
							if(model.utenteDoppione(txtUsernameReg.getText()))
							{
								av.creaFinestraErrore("campi","Username è già in uso!");
							}else{
								model.inserisciUtente(txtUsernameReg.getText(),txtPasswordReg.getText());
								
								
								Alert alert = new Alert(AlertType.INFORMATION);
								Stage stage = (Stage) alert.getDialogPane().getScene().getWindow();
								stage.getIcons().add(new Image(this.getClass().getResource("/imm/rubrica.jpg").toString()));
								alert.setTitle("Information Dialog");
								alert.setHeaderText(null);
								alert.setContentText("Registrazione avvenuta!");

								alert.showAndWait();
								
								
								txtUsernameReg.setText("");
								txtPasswordReg.setText("");
							}
							
							
						}else {
							//pass<10
							av.creaFinestraErrore("campi","La password deve essere minore o ugale a 10 caratteri");
						}
					}else {
						//pass >4
						av.creaFinestraErrore("campi","La password deve essere maggiore o ugale a 4 caratteri");
					}
				}else {
					//user <10
					av.creaFinestraErrore("campi","La username deve essere minore o ugale a 10 caratteri");
				}
			}else {
				//user >4
				av.creaFinestraErrore("campi","La username deve essere maggiore o ugale a 4 caratteri");
			}
			
			
			
			
		}
	}
	
	
	
	
	// Event Listener on Button.onAction
	@FXML
	public void Spiegazione(ActionEvent event) {		
		Alert alert = new Alert(AlertType.INFORMATION);
		Stage stage = (Stage) alert.getDialogPane().getScene().getWindow();
		stage.getIcons().add(new Image(this.getClass().getResource("/imm/rubrica.jpg").toString()));
		alert.setTitle("Information Dialog");
		alert.setHeaderText(null);
		alert.setContentText("Programma che gestisce una rubrica. Per poterla iniziare ad usare bisogna prima registrarsi e poi eseguire il login con le credenziali.");
		alert.showAndWait();
		
		//DA FARE LA SPIEGAZIONE
		
		
	}	
}
